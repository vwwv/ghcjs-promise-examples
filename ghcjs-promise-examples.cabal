name:                ghcjs-promise-examples
version:             0.1.0.0
synopsis:            Usage examples of ghcjs-promise.
description:         Usage examples of ghcjs-promise.
homepage:            https://github.com/vwwv/ghcjs-promise-examples
license:             BSD3
author:              Alejandro Durán Pallarés
maintainer:          vwwv@correo.ugr.es
category:            Example
build-type:          Simple
cabal-version:       >=1.10

executable battery
  hs-source-dirs:      src/hs
  main-is:             Battery.hs


  build-depends:       base >= 4.7 && < 5
                     , ghcjs-base
                     , ghcjs-promise
                     , protolude

  default-language: Haskell2010


executable meaning-life
  hs-source-dirs:      src/hs
  main-is:             MeaningOfLifeApp.hs
  js-sources:          src/js/best_ui_ever.js

  build-depends:       base >= 4.7 && < 5
                     , ghcjs-base
                     , ghcjs-promise
                     , protolude

  default-language: Haskell2010


executable example1
  hs-source-dirs:      src
  main-is:             Example1.hs


  build-depends:       base >= 4.7 && < 5
                     , ghcjs-base
                     , ghcjs-promise
                     , protolude

  default-extensions:  BangPatterns
                     , BangPatterns
                     , BinaryLiterals
                     , CPP
                     , DeriveGeneric
                     , DisambiguateRecordFields
                     , DefaultSignatures
                     , EmptyDataDecls
                     , FlexibleContexts
                     , FlexibleInstances
                     , FunctionalDependencies
                     , NoImplicitPrelude
                     , GADTs
                     , LambdaCase
                     , MonadComprehensions
                     , MultiParamTypeClasses
                     , MultiWayIf
                     , OverloadedStrings
                     , PatternSynonyms
                     , RankNTypes
                     , RecordWildCards
                     , RecursiveDo
                     , ScopedTypeVariables
                     , StandaloneDeriving
                     , TupleSections
                     , TypeFamilies
                     , TypeOperators

  default-language: Haskell2010





